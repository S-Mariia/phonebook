{"version":3,"file":"static/js/23.7938a1a5.chunk.js","mappings":"uQAiBA,EAjBe,CACbA,MAAO,CACLC,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,MAAO,QACPC,YAAa,oBAEfC,SAAU,CACRL,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,MAAO,WACPC,YAAa,sBCRjB,EALqB,CACnBL,MAAO,GACPM,SAAU,I,UC2CZ,EApCkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,WAAS,UAAKC,IAAxC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,cAApBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACdJ,GAAS,SAAAK,GAAS,yBACbA,GADa,cAEfd,EAAOa,GAFQ,GAInB,EAUD,OACE,kBAAMR,SATa,SAAAM,GACnBA,EAAII,iBACJC,QAAQC,IAAI,SAEZZ,GAAS,UAAKG,IACdC,GAAS,UAAKF,GACf,EAGC,WACE,SAACW,EAAA,GAAD,QACEC,SAAUT,EACVG,MAAOL,EAAMV,OACTsB,EAAAA,SAEN,SAACC,EAAA,GAAD,QACEF,SAAUT,EACVG,MAAOL,EAAMJ,UACTgB,EAAAA,YAEN,SAACE,EAAA,EAAD,CAAQvB,KAAK,SAAb,uBAGL,E,UC5BD,EAVmB,WACjB,IAAMwB,GAAWC,EAAAA,EAAAA,MAMjB,OAAO,SAAC,EAAD,CAAWnB,SAJG,SAAAoB,GACnBF,GAASG,EAAAA,EAAAA,IAAMD,GAChB,GAGF,C,sECXYE,E,QAAeC,GAAAA,OAAH,0P,UCIzB,EAJe,SAAC,GAAmC,IAAD,IAAhC7B,KAAAA,OAAgC,MAAzB,SAAyB,EAAf8B,EAAe,EAAfA,SACjC,OAAO,SAACF,EAAD,CAAc5B,KAAMA,EAApB,SAA2B8B,GACnC,C,4ICFYC,E,QAAOF,GAAAA,IAAH,kE,wCCkCjB,EA7BsB,SAAC,GAAyC,IAAvC1B,EAAsC,EAAtCA,MAAOiB,EAA+B,EAA/BA,SAAUpB,EAAqB,EAArBA,KAASgC,GAAY,YACvDC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnC,GAA0C5B,EAAAA,EAAAA,WAAS,GAAnD,eAAO6B,EAAP,KAAsBC,EAAtB,KAGA,GAAa,aAATrC,EAIJ,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOsC,QAASL,EAAhB,SAAqB9B,KACrB,UAAC4B,EAAD,YACE,SAAC,MAAD,QACEE,GAAIA,EACJb,SAAUA,EACVpB,KAAMoC,EAAgB,OAAS,YAC3BJ,KAEN,SAAC,MAAD,CACEO,KAAM,GACNC,MAAO,CAAEC,YAAa,GAAIC,OAAQ,WAClCC,QAnBY,kBAAMN,GAAiB,SAAAtB,GAAS,OAAKA,CAAL,GAAhC,SAwBrB,C,8GClBD,IAXkB,SAAC,GAAmC,IAAjCZ,EAAgC,EAAhCA,MAAOiB,EAAyB,EAAzBA,SAAaY,GAAY,YAC7CC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAEnC,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOG,QAASL,EAAhB,SAAqB9B,KACrB,SAAC,MAAD,QAAO8B,GAAIA,EAAIb,SAAUA,GAAcY,MAG5C,C,qICZYY,EAAQf,EAAAA,GAAAA,MAAH,8LAYLgB,EAAQhB,EAAAA,GAAAA,MAAH,uFAMLiB,EAAiBjB,EAAAA,GAAAA,IAAH,+C","sources":["modules/LoginForm/fields.js","modules/LoginForm/initialState.js","modules/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","shared/components/Button/Button.styled.js","shared/components/Button/Button.jsx","shared/components/PasswordInput/PasswordInput.styled.js","shared/components/PasswordInput/PasswordInput.jsx","shared/components/TextField/TextField.jsx","shared/components/TextField/TextField.styled.js"],"sourcesContent":["const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'Email',\n    placeholder: 'Enter your email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'Password',\n    placeholder: 'Create a password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","import { useState } from 'react';\n\nimport TextField from 'shared/components/TextField/TextField';\nimport PasswordInput from 'shared/components/PasswordInput/PasswordInput';\nimport Button from 'shared/components/Button/Button';\n\nimport fields from './fields';\nimport initialState from './initialState';\n\nconst LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    console.log('login');\n\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        onChange={handleChange}\n        value={state.email}\n        {...fields.email}\n      />\n      <PasswordInput\n        onChange={handleChange}\n        value={state.password}\n        {...fields.password}\n      />\n      <Button type=\"submit\">Sign up</Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch } from 'react-redux';\n\nimport LoginForm from 'modules/LoginForm/LoginForm';\nimport { login } from 'redux/auth/auth-operations';\n\nconst SignUpPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = data => {\n    dispatch(login(data));\n  };\n\n  return <LoginForm onSubmit={handleSubmit} />;\n};\n\nexport default SignUpPage;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  position: relative;\n  font-size: 17px;\n  font-weight: 500;\n  width: 180px;\n  padding: 8px 30px;\n  background-color: rgb(235, 225, 214);\n  border: none;\n  border-radius: 5px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nconst Button = ({ type = 'submit', children }) => {\n  return <StyledButton type={type}>{children}</StyledButton>;\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import { useMemo, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { BiShow } from 'react-icons/bi';\n\nimport { Input, Label, InputContainer } from '../TextField/TextField.styled';\nimport { Wrap } from './PasswordInput.styled';\n\nconst PasswordInput = ({ label, onChange, type, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  const [shownPassword, setShownPassword] = useState(false);\n  const handleClick = () => setShownPassword(prevState => !prevState);\n\n  if (type !== 'password') {\n    return;\n  }\n\n  return (\n    <InputContainer>\n      <Label htmlFor={id}>{label}</Label>\n      <Wrap>\n        <Input\n          id={id}\n          onChange={onChange}\n          type={shownPassword ? 'text' : 'password'}\n          {...props}\n        />\n        <BiShow\n          size={20}\n          style={{ marginLeft: -30, cursor: 'pointer' }}\n          onClick={handleClick}\n        />\n      </Wrap>\n    </InputContainer>\n  );\n};\n\nexport default PasswordInput;\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { Input, Label, InputContainer } from './TextField.styled';\n\nconst TextField = ({ label, onChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <InputContainer>\n      <Label htmlFor={id}>{label}</Label>\n      <Input id={id} onChange={onChange} {...props} />\n    </InputContainer>\n  );\n};\n\nexport default TextField;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  height: 42px;\n  min-width: 400px;\n  padding: 8px;\n  padding-right: 40px;\n  border: 4px solid rgb(235, 225, 214);\n\n  /* &:focus {\n    outline: none;\n  } */\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  display: block;\n  margin-bottom: 8px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 12px;\n`;\n"],"names":["email","type","name","required","label","placeholder","password","onSubmit","useState","initialState","state","setState","handleChange","evt","currentTarget","value","prevState","preventDefault","console","log","TextField","onChange","fields","PasswordInput","Button","dispatch","useDispatch","data","login","StyledButton","styled","children","Wrap","props","id","useMemo","nanoid","shownPassword","setShownPassword","htmlFor","size","style","marginLeft","cursor","onClick","Input","Label","InputContainer"],"sourceRoot":""}