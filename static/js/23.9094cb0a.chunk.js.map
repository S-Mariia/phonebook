{"version":3,"file":"static/js/23.9094cb0a.chunk.js","mappings":"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","sources":["modules/LoginForm/LoginForm.styled.js","modules/LoginForm/fields.js","modules/LoginForm/initialState.js","modules/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","pages/LoginPage/LoginPage.styled.js","shared/components/Button/Button.styled.js","shared/components/Button/Button.jsx","shared/components/PasswordInput/PasswordInput.styled.js","shared/components/PasswordInput/PasswordInput.jsx","shared/components/TextField/TextField.jsx","shared/components/TextField/TextField.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 24px;\n`;\n","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'Email',\n    placeholder: 'Enter your email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'Password',\n    placeholder: 'Enter your password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectLoginError } from 'redux/auth/auth-selectors';\n\nimport { resetLoginError } from 'redux/auth/auth-slice';\nimport { ButtonContainer } from './LoginForm.styled';\n\nimport TextField from 'shared/components/TextField/TextField';\nimport PasswordInput from 'shared/components/PasswordInput/PasswordInput';\nimport Button from 'shared/components/Button/Button';\n\nimport { toast } from 'react-toastify';\n\nimport fields from './fields';\nimport initialState from './initialState';\n\nconst LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n  const error = useSelector(selectLoginError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(resetLoginError());\n  }, [dispatch]);\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const loggedIn = onSubmit({ ...state });\n    if (loggedIn) {\n      setState({ ...initialState });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          onChange={handleChange}\n          value={state.email}\n          {...fields.email}\n        />\n        <PasswordInput\n          onChange={handleChange}\n          value={state.password}\n          {...fields.password}\n        />\n        <ButtonContainer>\n          <Button type=\"submit\">Log In</Button>\n        </ButtonContainer>\n      </form>\n      {error && dispatch(resetLoginError()) && toast(error)}\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/auth-selectors';\n\nimport LoginForm from 'modules/LoginForm/LoginForm';\nimport { login } from 'redux/auth/auth-operations';\n\nimport { PageWrap } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const handleSubmit = data => {\n    dispatch(login(data));\n    return isLoggedIn;\n  };\n\n  return (\n    <PageWrap>\n      <LoginForm onSubmit={handleSubmit} />\n    </PageWrap>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\n\nexport const PageWrap = styled.main`\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n`;\n","import styled from 'styled-components';\nimport { accentColor } from 'shared/colors';\n\nexport const StyledButton = styled.button`\n  position: relative;\n  font-size: 17px;\n  font-weight: 700;\n  width: 180px;\n  padding: 8px 30px;\n  line-height: 1.2rem;\n  background: ${accentColor};\n\n  border: none;\n  border-radius: 4px;\n  color: #fff;\n  height: 36px;\n  box-shadow: none;\n  transition: all 250ms ease-in-out;\n  :hover {\n    box-shadow: 0 2px 4px rgb(0 0 0 / 30%);\n    cursor: pointer;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nconst Button = ({ type = 'submit', children }) => {\n  return <StyledButton type={type}>{children}</StyledButton>;\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import { useMemo, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { BiShow } from 'react-icons/bi';\n\nimport { Input, Label, InputContainer } from '../TextField/TextField.styled';\nimport { Wrap } from './PasswordInput.styled';\n\nconst PasswordInput = ({ label, onChange, type, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  const [shownPassword, setShownPassword] = useState(false);\n  const handleClick = () => setShownPassword(prevState => !prevState);\n\n  if (type !== 'password') {\n    return;\n  }\n\n  return (\n    <InputContainer>\n      <Label htmlFor={id}>{label}</Label>\n      <Wrap>\n        <Input\n          id={id}\n          onChange={onChange}\n          type={shownPassword ? 'text' : 'password'}\n          {...props}\n        />\n        <BiShow\n          size={20}\n          style={{ marginLeft: -30, cursor: 'pointer' }}\n          onClick={handleClick}\n        />\n      </Wrap>\n    </InputContainer>\n  );\n};\n\nexport default PasswordInput;\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { Input, Label, InputContainer } from './TextField.styled';\n\nconst TextField = ({ label, onChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <InputContainer>\n      <Label htmlFor={id}>{label}</Label>\n      <Input id={id} onChange={onChange} {...props} />\n    </InputContainer>\n  );\n};\n\nexport default TextField;\n","import styled from 'styled-components';\nimport { accentColor } from 'shared/colors';\n\nexport const Input = styled.input`\n  height: 42px;\n  min-width: 410px;\n  padding: 8px;\n  padding-right: 40px;\n  border: 4px solid ${accentColor};\n  background-color: #d8d9b0;\n  font-weight: 600;\n  color: #191b0e;\n\n  &::placeholder {\n    color: #191b0e;\n    font-weight: 400;\n    font-size: 15px;\n  }\n\n  /* &:focus {\n    outline: none;\n  } */\n`;\n\nexport const Label = styled.label`\n  font-weight: 700;\n  font-size: 18px;\n  display: block;\n  margin-bottom: 8px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 16px;\n`;\n"],"names":["ButtonContainer","styled","email","type","name","required","label","placeholder","password","onSubmit","useState","initialState","state","setState","error","useSelector","selectLoginError","dispatch","useDispatch","useEffect","resetLoginError","handleChange","evt","currentTarget","value","prevState","preventDefault","TextField","onChange","fields","PasswordInput","Button","toast","isLoggedIn","selectIsLoggedIn","data","login","PageWrap","StyledButton","accentColor","children","Wrap","props","id","useMemo","nanoid","shownPassword","setShownPassword","htmlFor","size","style","marginLeft","cursor","onClick","Input","Label","InputContainer"],"sourceRoot":""}