{"version":3,"file":"static/js/386.f3b89c4a.chunk.js","mappings":"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","sources":["modules/Contacts/ContactForm/ContactForm.styled.js","redux/contacts/contacts-selectors.js","modules/Contacts/ContactForm/ContactForm.jsx","modules/Contacts/ContactItem/ContactItem.styled.js","modules/Contacts/ContactItem/ContactItem.jsx","modules/Contacts/ContactList/ContactList.styled.js","redux/filter/filter-selectors.js","modules/Contacts/ContactList/ContactList.jsx","modules/Contacts/Filter/Filter.jsx","modules/Contacts/Contacts.styled.js","modules/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx","shared/components/Button/Button.styled.js","shared/components/Button/Button.jsx","shared/components/TextField/TextField.jsx","shared/components/TextField/TextField.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  /* display: flex;\n  flex-direction: column; */\n  width: 410px;\n`;\n\nexport const ClearButton = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  margin-left: 360px;\n  height: 36px;\n  width: 36px;\n  border: none;\n  color: #2a2a2a;\n  transition: color 250ms linear;\n\n  & > svg {\n    position: absolute;\n    left: 380px;\n    top: 40px;\n    z-index: 2;\n  }\n\n  &:hover {\n    color: rgb(158, 44, 44);\n  }\n`;\n\nexport const Wrap = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  /* margin-bottom: 8px; */\n  fill: #2a2a2a;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 8px;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsAddingLoading = state => state.contacts.isAddingLoading;\n\nexport const selectIsDeletingLoading = state =>\n  state.contacts.isDeletingLoading;\n\nexport const selectWithError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { IoMdPerson } from 'react-icons/io';\nimport { BsTelephoneFill } from 'react-icons/bs';\nimport { GrClose } from 'react-icons/gr';\n\nimport Button from 'shared/components/Button/Button';\nimport Loader from 'shared/components/Loader/Loader';\nimport { Form, Wrap, ClearButton, ButtonContainer } from './ContactForm.styled';\n\nimport {\n  selectContacts,\n  selectIsAddingLoading,\n} from 'redux/contacts/contacts-selectors';\n\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport TextField from 'shared/components/TextField/TextField';\n\nimport { toast } from 'react-toastify';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsAddingLoading);\n\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n\n    const alreadyInList = Boolean(\n      contacts.find(\n        contact => contact.name?.toLowerCase() === state.name?.toLowerCase()\n      )\n    );\n\n    if (alreadyInList) {\n      toast(`${state.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name: state.name, number: state.number }));\n\n    setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Wrap>\n        <TextField\n          label={\n            <Wrap>\n              <IoMdPerson size={20} />\n              Name\n            </Wrap>\n          }\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <ClearButton\n          type=\"button\"\n          onClick={() => {\n            setState(prevState => ({ ...prevState, name: '' }));\n          }}\n        >\n          <GrClose size={20} />\n        </ClearButton>\n      </Wrap>\n\n      <Wrap>\n        <TextField\n          label={\n            <Wrap>\n              <BsTelephoneFill size={20} />\n              Phone\n            </Wrap>\n          }\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          value={state.number}\n          placeholder=\"Enter phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <ClearButton\n          type=\"button\"\n          onClick={() => {\n            setState(prevState => ({ ...prevState, number: '' }));\n          }}\n        >\n          <GrClose size={20} />\n        </ClearButton>\n      </Wrap>\n      <ButtonContainer>\n        <Button type=\"submit\">\n          Add contact\n          {isLoading && <Loader size={30} shift=\"175\" />}\n        </Button>\n      </ButtonContainer>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Tr = styled.tr`\n  height: 36px;\n  font-size: 17px;\n  font-weight: 600;\n  color: #2a2a2a;\n  background-color: #d8d9b0;\n  &:nth-child(2n) {\n    background-color: rgb(188, 189, 128);\n  }\n`;\n\nexport const Td = styled.td`\n  position: relative;\n  text-align: center;\n  padding: ${({ children }) => {\n    if (children?.props?.type === 'button') {\n      return '0px';\n    }\n    return '5px 10px';\n  }};\n\n  min-width: ${({ children }) => {\n    if (children?.props?.type === 'button') {\n      return '50px';\n    }\n    return '175px';\n  }};\n`;\n\nexport const Btn = styled.button`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  fill: #2a2a2a;\n  transition: fill 250ms linear;\n\n  background-color: transparent;\n  border: none;\n\n  &:hover {\n    cursor: pointer;\n    fill: rgb(158, 44, 44);\n  }\n`;\n","import { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { selectIsDeletingLoading } from 'redux/contacts/contacts-selectors';\n\nimport { IconContext } from 'react-icons';\nimport { MdDelete } from 'react-icons/md';\n\nimport Loader from 'shared/components/Loader/Loader';\n\nimport { Tr, Td, Btn } from './ContactItem.styled';\n\nconst ContactItem = ({ item: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsDeletingLoading);\n  const deletedId = useRef(null);\n\n  return (\n    <Tr>\n      <Td>{name}</Td>\n      <Td>{number}</Td>\n      <Td>\n        <Btn\n          onClick={() => {\n            deletedId.current = id;\n            dispatch(deleteContact(id));\n          }}\n          type=\"button\"\n        >\n          <IconContext.Provider\n            value={{\n              size: 20,\n            }}\n          >\n            {isLoading && deletedId.current === id ? (\n              <Loader size={30} />\n            ) : (\n              <MdDelete />\n            )}\n          </IconContext.Provider>\n        </Btn>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const Table = styled.table`\n  position: relative;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts =\n      filter !== ''\n        ? contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter)\n          )\n        : contacts;\n    return filteredContacts;\n  }\n);\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactItem from 'modules/Contacts/ContactItem/ContactItem';\nimport Loader from 'shared/components/Loader/Loader';\nimport { Table, Container } from './ContactList.styled';\n\nimport {\n  selectIsLoading,\n  selectWithError,\n} from 'redux/contacts/contacts-selectors';\nimport { selectFilteredContacts } from 'redux/filter/filter-selectors';\n\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectWithError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {error !== null && <p>{error}</p>}\n\n      <Table>\n        <tbody>\n          {filteredContacts.map(contact => (\n            <ContactItem key={contact.id} item={contact} />\n          ))}\n        </tbody>\n        {isLoading && <Loader yShift={-10} />}\n      </Table>\n    </Container>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { selectFilter } from 'redux/filter/filter-selectors';\n\nimport TextField from 'shared/components/TextField/TextField';\n\nconst Filter = () => {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <TextField\n        label=\"Find contacts by name\"\n        onChange={evt => dispatch(setFilter(evt.currentTarget.value))}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        value={filterValue}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 26px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 86px;\n  margin-top: 26px;\n`;\n\nexport const Frame = styled.div`\n  padding: 30px 24px;\n  border: 2px dotted;\n  align-items: flex-start;\n`;\n","import ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nimport { Title, Wrap, Frame } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <Wrap>\n      <Frame>\n        <Title>Add contact</Title>\n        <ContactForm />\n      </Frame>\n\n      <Frame>\n        <Title>Contacts</Title>\n        <Filter />\n        <ContactList />\n      </Frame>\n    </Wrap>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.main`\n  display: flex;\n  justify-content: center;\n  /* margin-top: 40px; */\n`;\n","import Contacts from 'modules/Contacts/Contacts';\n\nimport { Wrapper } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <Wrapper>\n      <Contacts />\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\nimport { accentColor } from 'shared/colors';\n\nexport const StyledButton = styled.button`\n  position: relative;\n  font-size: 17px;\n  font-weight: 700;\n  width: 180px;\n  padding: 8px 30px;\n  line-height: 1.2rem;\n  background: ${accentColor};\n\n  border: none;\n  border-radius: 4px;\n  color: #fff;\n  height: 36px;\n  box-shadow: none;\n  transition: all 250ms ease-in-out;\n  :hover {\n    box-shadow: 0 2px 4px rgb(0 0 0 / 30%);\n    cursor: pointer;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nconst Button = ({ type = 'submit', children }) => {\n  return <StyledButton type={type}>{children}</StyledButton>;\n};\n\nexport default Button;\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { Input, Label, InputContainer } from './TextField.styled';\n\nconst TextField = ({ label, onChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <InputContainer>\n      <Label htmlFor={id}>{label}</Label>\n      <Input id={id} onChange={onChange} {...props} />\n    </InputContainer>\n  );\n};\n\nexport default TextField;\n","import styled from 'styled-components';\nimport { accentColor } from 'shared/colors';\n\nexport const Input = styled.input`\n  height: 42px;\n  min-width: 410px;\n  padding: 8px;\n  padding-right: 40px;\n  border: 4px solid ${accentColor};\n  background-color: #d8d9b0;\n  font-weight: 600;\n  color: #191b0e;\n\n  &::placeholder {\n    color: #191b0e;\n    font-weight: 400;\n    font-size: 15px;\n  }\n\n  /* &:focus {\n    outline: none;\n  } */\n`;\n\nexport const Label = styled.label`\n  font-weight: 700;\n  font-size: 18px;\n  display: block;\n  margin-bottom: 8px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 16px;\n`;\n"],"names":["Form","styled","ClearButton","Wrap","ButtonContainer","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectIsAddingLoading","isAddingLoading","selectIsDeletingLoading","isDeletingLoading","selectWithError","error","dispatch","useDispatch","useSelector","useState","name","number","setState","handleInputChange","evt","currentTarget","value","prevState","onSubmit","preventDefault","Boolean","find","contact","toLowerCase","toast","addContact","TextField","label","size","onChange","type","placeholder","pattern","title","required","onClick","Button","Loader","shift","Tr","Td","children","props","Btn","item","id","deletedId","useRef","current","deleteContact","Table","Container","selectFilter","filter","selectFilteredContacts","createSelector","normalizedFilter","includes","filteredContacts","useEffect","fetchContacts","map","yShift","filterValue","setFilter","Title","Frame","Wrapper","StyledButton","accentColor","useMemo","nanoid","htmlFor","Input","Label","InputContainer"],"sourceRoot":""}