{"version":3,"file":"static/js/936.3f8158a0.chunk.js","mappings":"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","sources":["modules/SignUpForm/fields.js","modules/SignUpForm/initialState.js","modules/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx","shared/components/Button/Button.styled.js","shared/components/Button/Button.jsx","shared/components/PasswordInput/PasswordInput.styled.js","shared/components/PasswordInput/PasswordInput.jsx","shared/components/TextField/TextField.jsx","shared/components/TextField/TextField.styled.js"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'Name',\n    placeholder: 'Enter your name',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'Email',\n    placeholder: 'Enter your email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'Password',\n    placeholder: 'Create a password',\n  },\n  confirmedPassword: {\n    type: 'password',\n    name: 'confirmedPassword',\n    required: true,\n    label: 'Confirm your password',\n    placeholder: 'Enter created password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  name: '',\n  email: '',\n  password: '',\n  confirmedPassword: '',\n};\n\nexport default initialState;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectSignupError } from 'redux/auth/auth-selectors';\n\nimport { resetSignupError } from 'redux/auth/auth-slice';\n\nimport TextField from 'shared/components/TextField/TextField';\nimport PasswordInput from 'shared/components/PasswordInput/PasswordInput';\nimport Button from 'shared/components/Button/Button';\n\nimport fields from './fields';\nimport initialState from './initialState';\n\nconst SignUpForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n  const error = useSelector(selectSignupError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(resetSignupError());\n  }, [dispatch]);\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (state.password !== state.confirmedPassword) {\n      alert('The password is incorrect');\n      setState(prevState => ({ ...prevState, confirmedPassword: '' }));\n      return;\n    }\n\n    const { name, email, password } = state;\n    const signedUp = onSubmit({ name, email, password });\n    if (signedUp) {\n      setState({ ...initialState });\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          onChange={handleChange}\n          value={state.name}\n          {...fields.name}\n        />\n        <TextField\n          onChange={handleChange}\n          value={state.email}\n          {...fields.email}\n        />\n        <PasswordInput\n          onChange={handleChange}\n          value={state.password}\n          {...fields.password}\n        />\n        <PasswordInput\n          onChange={handleChange}\n          value={state.confirmedPassword}\n          {...fields.confirmedPassword}\n        />\n        <Button type=\"submit\">Sign up</Button>\n      </form>\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default SignUpForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/auth-selectors';\n\nimport SignUpForm from 'modules/SignUpForm/SignUpForm';\nimport { signup } from 'redux/auth/auth-operations';\n\nconst SignUpPage = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const handleSubmit = data => {\n    dispatch(signup(data));\n    return isLoggedIn;\n  };\n\n  return <SignUpForm onSubmit={handleSubmit} />;\n};\n\nexport default SignUpPage;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  position: relative;\n  font-size: 17px;\n  font-weight: 500;\n  width: 180px;\n  padding: 8px 30px;\n  background-color: rgb(235, 225, 214);\n  border: none;\n  border-radius: 5px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nconst Button = ({ type = 'submit', children }) => {\n  return <StyledButton type={type}>{children}</StyledButton>;\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import { useMemo, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { BiShow } from 'react-icons/bi';\n\nimport { Input, Label, InputContainer } from '../TextField/TextField.styled';\nimport { Wrap } from './PasswordInput.styled';\n\nconst PasswordInput = ({ label, onChange, type, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  const [shownPassword, setShownPassword] = useState(false);\n  const handleClick = () => setShownPassword(prevState => !prevState);\n\n  if (type !== 'password') {\n    return;\n  }\n\n  return (\n    <InputContainer>\n      <Label htmlFor={id}>{label}</Label>\n      <Wrap>\n        <Input\n          id={id}\n          onChange={onChange}\n          type={shownPassword ? 'text' : 'password'}\n          {...props}\n        />\n        <BiShow\n          size={20}\n          style={{ marginLeft: -30, cursor: 'pointer' }}\n          onClick={handleClick}\n        />\n      </Wrap>\n    </InputContainer>\n  );\n};\n\nexport default PasswordInput;\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { Input, Label, InputContainer } from './TextField.styled';\n\nconst TextField = ({ label, onChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <InputContainer>\n      <Label htmlFor={id}>{label}</Label>\n      <Input id={id} onChange={onChange} {...props} />\n    </InputContainer>\n  );\n};\n\nexport default TextField;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  height: 42px;\n  min-width: 400px;\n  padding: 8px;\n  padding-right: 40px;\n  border: 4px solid rgb(235, 225, 214);\n\n  /* &:focus {\n    outline: none;\n  } */\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  display: block;\n  margin-bottom: 8px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 12px;\n`;\n"],"names":["name","type","required","label","placeholder","email","password","confirmedPassword","onSubmit","useState","initialState","state","setState","error","useSelector","selectSignupError","dispatch","useDispatch","useEffect","resetSignupError","handleChange","evt","currentTarget","value","prevState","preventDefault","alert","TextField","onChange","fields","PasswordInput","Button","isLoggedIn","selectIsLoggedIn","data","signup","StyledButton","styled","children","Wrap","props","id","useMemo","nanoid","shownPassword","setShownPassword","htmlFor","size","style","marginLeft","cursor","onClick","Input","Label","InputContainer"],"sourceRoot":""}